#!/usr/bin/env ruby

require "optparse"
require "methadone"
require "open3"
lib = File.expand_path("../../lib", __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require "lsi"

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |command, path|
    apply = if command
      lambda do |path|
        stdout, stderr, status = Open3.capture3("#{command} #{path}")

        if status.success?
          puts stdout
        else
          puts stderr
        end
      end
    else
      lambda do |path|
        filename = File.basename(path)
        stat = File.stat(path)

        if stat.directory?
          puts "#{filename} is a directory with permissions #{sprintf("%o", stat.mode)}"
        else
          puts "#{filename} is a #{stat.size} byte file with permissions #{sprintf("%o", stat.mode)}"
        end
      end
    end

    Dir["#{path || Dir.pwd}/*"].each do |item|
      filename = File.basename(item)

      if command
        print "Run `#{command} #{filename}`? [y,n,q] (y): "
      else
        print "Get info for `#{filename}`? [y,n,q] (y): "
      end

      case STDIN.gets.chomp
      when "y", ""
        apply.call(item)
      when "n"
        next
      when "q"
        exit
      else
        exit!
      end
    end
  end

  # supplemental methods here

  # Declare command-line interface here

  # description "one line description of your app"
  #
  # Accept flags via:
  #
  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  # arg :some_arg
  #
  # # Make an argument optional
  arg :command, :optional
  arg :path, :optional

  version Lsi::VERSION

  use_log_level_option :toggle_debug_on_signal => "USR1"

  go!
end
